input,
select,
button,
textarea {
  padding: 5px;
  width: clamp(50%, 20em, 100%);
  border: 1px solid transparent;
  outline: 1px solid transparent;
  box-shadow: 0 3px 2px -3px var(--bor);
  transition: border 0.3s ease-in, outline 0.6s ease-in, box-shadow 0.6s ease-in;
}
.content-wrapper {
  background: transparent;
}
textarea {
  width: 100%;
  min-height: 10em;
  resize: vertical;
  display: block;
}
.submit[type=submit] {
  --svg: var(--bg);
  background: var(--fg);
  color: var(--bg);
  font-weight: 600;
}
button {
  display: flex;
  align-items: center;
  gap: 0.5em;
  background: hsl(var(--h), var(--s), 90%);
  text-transform: uppercase;
  width: auto;
  padding-inline: 2em;
  box-shadow: inset 0 0 0 1px transparent;
  transition: all 0.3s ease;
}
.range {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-block: 0.5em;

  label {
    margin: 0;
    min-width: max-content;
    text-transform: none;
    font-size: 0.75em;
  }

  &:first-child {
    text-align: right;
  }

  &:last-child {
    text-align: left;
  }
}

input[type="range"] {
  appearance: none;
  width: calc(100% - 1em);
  height: calc(1em + var(--pad) * 2);
  background: var(--b);
  border: none;
  outline: none;
  padding: 0 var(--pad);
  margin-inline: 0.5em;
  border-radius: 1em;

  &,
  &* {
    transition: all 0.5s ease;
  }
}

@mixin range-thumb {
  appearance: none;
  width: 1em;
  height: 1em;
  border: none;
  outline: none;
  background: var(--fg);
  border-radius: 1em;
  transform: translate3d(0, 0, 0);
}

@mixin range-track {
  background: linear-gradient(90deg, var(--tint) -25%, var(--tint2) 125%);
  display: block;
  width: calc(100% + var(--pad) * 2);
  height: calc(1em + var(--pad) * 2);
  border-radius: 1em;
  margin-inline: calc(var(--pad) * -1);
  transition: opacity 0.5s ease-in, background 0.5s ease-in;
  opacity: 0;
  will-change: opacity, background;
}

input[type="range"]::-webkit-slider-runnable-track {
  @include range-track;
  background: var(--b);
  padding: 0.25em var(--pad);
  opacity: 1;
}
input[type="range"]::-moz-range-track {
  @include range-track;
}
input[type="range"]::-ms-track {
  @include range-track;
}

input[type="range"]::-webkit-slider-thumb {
  @include range-thumb;
}
input[type="range"]::-moz-range-thumb {
  @include range-thumb;
}
input[type="range"]::-ms-thumb {
  @include range-thumb;
}

input[type="range"]:focus::-webkit-slider-runnable-track {
  transition: background 0.5s ease-out;
  background: linear-gradient(90deg, var(--tint) -25%, var(--tint2) 125%);
  opacity: 1;
}
input[type="range"]:focus::-moz-range-track {
  transition: opacity 0.5s ease-out;
  opacity: 1;
}
input[type="range"]:focus::-ms-track {
  transition: opacity 0.5s ease-out;
  opacity: 1;
}

input[type="color"] {
  appearance: none;
  max-width: 4em;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 2.5em;
  padding: 5px;
}

input[type="color"]::-moz-color-swatch,
input[type="color"]::-webkit-color-swatch {
  border: inherit;
  border-radius: inherit;
  display: block;
}

.buttons {
  display: flex;
  justify-content: flex-end;
  gap: 0.5em;
}
.input-group-prepend {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: #fff;
  background-clip: border-box;
  border: 0 solid rgba(0,0,0,.125);
  border-radius: .25rem;
}
.input-icon {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  height: 100%;
  align-items: center;
  padding: .375rem .75rem;
  margin-bottom: 0;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  text-align: center;
  white-space: nowrap;
  background-color: #e9ecef;
  border: 1px solid #ced4da;
  border-radius: .25rem;
}
input,select{
  padding-left: 10px !important;
  border: none !important;
}
.timelines,.card-infomation
{
  padding: 10px calc(var(--pads) * 2);
}
button {
  display: flex;
  align-items: center;
  gap: 0.5em;
  background: hsl(var(--h), var(--s), 90%);
  text-transform: uppercase;
  width: auto;
  padding-inline: 2em;
  box-shadow: inset 0 0 0 1px transparent;
  transition: all 0.3s ease;

  .dark & {
    background: hsl(var(--h), var(--s), 15%);
  }

  &:hover {
    opacity: 0.8;
    box-shadow: inset 0 0 0 1px var(--fg);
  }

  &[type="submit"] {
    --svg: var(--bg);
    background: var(--fg);
    color: var(--bg);
    font-weight: 600;
  }
  
}
svg {
  fill: var(--svg);
  height: 1.5em;
  width: auto;
}

.group {
  display: grid;
  grid-template-columns: auto 1fr;
  align-items: center;
  margin-block: 1em;
  width: max-content;

  input + label {
    display: inline-block;
    margin-block: 0;
    padding: 0.5em  1em;
    margin-inline-end: 2em;
  }
}

@media screen and ( min-width: 600px ) {
  .group {
    grid-template-columns: repeat(2, auto 1fr);
  }
}

@media screen and ( min-width: 1200px ) {
  .group {
    grid-template-columns: repeat(4, auto 1fr);
  }
}
.range .skillname
{
  width: 100px;
  margin-bottom: 0px !important;
}
label {
  display: block;
  width: max-content;
  font-size: 0.875rem;
  text-transform: uppercase;
  margin-inline-start: 0;
  color: var(--labels);
  transition: all 0.5s ease;
}
.field {
  margin-block: 1em;
}
.field:nth-of-type(1) {
  margin-block-start: 1em;
}
.field:nth-last-of-type(1) {
  margin-block-end: 1em;
}

fieldset {
  min-width: 100%;
  width: 100%;
  border: 1px solid var(--bor);
  border-radius: 5px;
  padding: var(--pads);
  margin-block: var(--pads);
}

legend {
  font-size: 0.875rem;
  text-transform: uppercase;
  letter-spacing: 1px;
  padding: 0 2em;
  transform: translateX(-1em);
}

form {
  min-width: 100%;
  width: 100%;

  color: var(--fg);
  padding: 10px calc(var(--pads) * 2);
  border-radius: 8px;
}

form {
  --bor: hsl(var(--h), var(--s), 85%);
  --bg: var(--light);
  --fg: var(--dark);
  --labels: hsl(var(--h), var(--s), 40%);
  --b: hsla(var(--h), var(--s), 100%, 1);
  --svg: var(--fg);
}

form.dark {
  --bor: hsl(var(--h), var(--s), 35%);
  --bg: var(--dark);
  --fg: var(--light);
  --labels: hsl(var(--h), var(--s), 65%);
  --b: hsla(var(--h), var(--s), 12%, 1);
  
  --tint: hsl(260, 85%, 60%);
  --tint2: hsl(300, 85%, 60%);
}
#app {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--pads);
}

@media screen and (min-width: 900px) {
  #app {
    grid-template-columns: 1fr;
  }
}

:root {
  --h: 222;
  --s: 20%;
  --light: hsl(var(--h), var(--s), 95%);
  --dark: hsl(var(--h), var(--s), 20%);
  --tint: hsl(160, 85%, 60%);
  --tint2: hsl(200, 85%, 60%);
  --pads: max(1vw, 10px);
}
